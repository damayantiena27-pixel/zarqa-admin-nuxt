Informasi Project:
Web ini dibangun menggunakan javascript dan typescripts, framework web nya menggunakan vue.js dan nuxt.js
untuk styling menggunakna tailwind.css 4 dan ui component library menggunakna shadcn vue
untuk backend seluruh nya di handle mengugnakn firebase auth dan firebase firestore,
untuk storage seperti image menggunakan cloudinary

tugas nya: Implementasi Auth yang kuat, jadi guest atau orang random yang belum login sebaiknya tidak bisa masuk ke halaman "/" atau dashboard, dan halaman lainnya, jika user guest mencoba memaksa akses ke halaman lainnya lewat url, maka langsung di redirect ke halaman login

plugins: firebase.client.js
import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";
import { getFirestore } from "firebase/firestore";
import { getStorage } from "firebase/storage";

const firebaseConfig = {
  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,
  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,
  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,
  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
  appId: import.meta.env.VITE_FIREBASE_APP_ID,
  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID,
};

let app;
let auth;
let db;
let storage;

export default defineNuxtPlugin(() => {
  app = initializeApp(firebaseConfig);
  auth = getAuth(app);
  db = getFirestore(app);
  storage = getStorage(app);

  return {
    provide: {
      firebase: {
        app,
        auth,
        firestore: db,
        storage,
      },
    },
  };
});

// Export for direct usage
export { auth, db, storage };

middleware: 
1. auth.js:
export default defineNuxtRouteMiddleware(() => {
  const { user, loading } = useAuth();

  if (loading.value) return; // Tungu auth state siap

  if (!user.value) {
    return navigateTo("/login");
  }
});

2. guest.js:
export default defineNuxtRouteMiddleware(() => {
  const { user, loading } = useAuth();

  if (loading.value) return;

  if (user.value) {
    return navigateTo("/");
  }
});

3. role.js:
export default defineNuxtRouteMiddleware((to) => {
  const { user, loading } = useAuth();

  if (loading.value) return;

  if (!user.value) {
    return navigateTo("/login");
  }

  // Ambil role yang dibutuhkan dari meta
  const requiredRole = to.meta.requiredRole;

  // Kalau tidak sesuai role, redirect
  if (
    requiredRole &&
    user.value.role !== requiredRole &&
    user.value.role !== "owner"
  ) {
    return navigateTo("/unauthorized");
  }
});


composables: useAuth.js
// composables/useAuth.js
import {
  signInWithEmailAndPassword,
  createUserWithEmailAndPassword,
  signOut,
  onAuthStateChanged,
} from "firebase/auth";
import { doc, getDoc, setDoc } from "firebase/firestore";

export const useAuth = () => {
  const { $firebase } = useNuxtApp();
  const auth = $firebase.auth;
  const db = $firebase.firestore;
  const user = useState("user", () => null); // Global state
  const loading = useState("loading", () => true);

  // Monitor auth state
  onAuthStateChanged(auth, async (authUser) => {
    if (authUser) {
      const userDoc = await getDoc(doc(db, "users", authUser.uid));
      if (userDoc.exists()) {
        user.value = { uid: authUser.uid, ...userDoc.data() };
      } else {
        user.value = null;
      }
    } else {
      user.value = null;
    }
    loading.value = false;
  });

  // Login
  const loginUser = async (email, password) => {
    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const authUser = userCredential.user;

      const userDoc = await getDoc(doc(db, "users", authUser.uid));
      if (!userDoc.exists()) throw new Error("User not found");

      user.value = { uid: authUser.uid, ...userDoc.data() };
      return user.value;
    } catch (error) {
      console.error("Error logging in:", error);
      throw error;
    }
  };

  // Register
  const registerUser = async (
    email,
    password,
    firstName,
    lastName,
    phoneNumber = "",
    imageUrl = "",
    role = "staff"
  ) => {
    try {
      const userCredential = await createUserWithEmailAndPassword(
        auth,
        email,
        password
      );
      const authUser = userCredential.user;

      const userData = {
        uid: authUser.uid,
        email,
        firstName,
        lastName,
        phoneNumber,
        imageUrl,
        role,
        createdAt: new Date(),
        updatedAt: new Date(),
      };

      await setDoc(doc(db, "users", authUser.uid), userData);

      user.value = userData;
      return userData;
    } catch (error) {
      console.error("Error registering user:", error.code, error.message);
      throw error;
    }
  };

  // Logout
  const logout = async () => {
    try {
      await signOut(auth);
      user.value = null;
      await navigateTo("/login");
      return { success: true };
    } catch (error) {
      return { success: false, error: error.message };
    }
  };

  return {
    user: readonly(user),
    loading: readonly(loading),
    loginUser,
    registerUser,
    logout,
  };
};

layout: default.vue
<script lang="ts">
export const description = "An inset sidebar with secondary navigation.";
export const iframeHeight = "800px";
</script>
<script setup lang="ts">
import AppSidebar from "@/components/AppSidebar.vue";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";
import { Separator } from "@/components/ui/separator";
import {
  SidebarInset,
  SidebarProvider,
  SidebarTrigger,
} from "@/components/ui/sidebar";
</script>
<template>
  <SidebarProvider>
    <AppSidebar />
    <SidebarInset class="max-w-screen overflow-hidden">
      <header class="flex h-16 shrink-0 items-center gap-2">
        <div class="flex items-center gap-2 px-4">
          <SidebarTrigger class="-ml-1" />
          <Separator orientation="vertical" class="mr-2 h-4" />
          <Breadcrumb>
            <BreadcrumbList>
              <BreadcrumbItem class="hidden md:block">
                <BreadcrumbLink href="#">
                  Building Your Application
                </BreadcrumbLink>
              </BreadcrumbItem>
              <BreadcrumbSeparator class="hidden md:block" />
              <BreadcrumbItem>
                <BreadcrumbPage>Data Fetching</BreadcrumbPage>
              </BreadcrumbItem>
            </BreadcrumbList>
          </Breadcrumb>
        </div>
      </header>
      <slot />
    </SidebarInset>
  </SidebarProvider>
</template>

index.vue:
<script setup lang="ts">
definePageMeta({
  middleware: "auth",
});

import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
  CardDescription,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import DateRangePicker from "@/components/DateRangePicker.vue";
import {
  BanknoteArrowDown,
  ShoppingCart,
  Users,
  BanknoteArrowUp,
} from "lucide-vue-next";
import OverviewChart from "@/components/chart/OverviewChart.vue";

// Data untuk chart
const chartData = {
  labels: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ],
  datasets: [
    {
      data: [
        5500, 4000, 2000, 2400, 3900, 1900, 3100, 2300, 4400, 3600, 5400, 4500,
      ],
      backgroundColor: "#FF4F0F",
      borderRadius: 4,
      borderSkipped: false,
    },
  ],
};
</script>

<template>
  <div>
    <Tabs defaultValue="overview" class="w-full">
      <!-- Top Bar (Tabs Menu & Date Range Picker & Download Button) -->
      <div class="flex items-center justify-between gap-4 pb-4 px-4">
        <div>
          <TabsList>
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="analytics">Analytics</TabsTrigger>
            <TabsTrigger value="queue">Queue</TabsTrigger>
          </TabsList>
        </div>
        <div class="flex items-center justify-end gap-4">
          <DateRangePicker />
          <Button>Download</Button>
        </div>
      </div>

      <!-- Tabs Content - Konten untuk setiap tab -->
      <TabsContent value="overview">
        <!-- Content Dashboard untuk Overview -->
        <div class="flex flex-1 flex-col gap-4 p-4 pt-0">
          <div class="grid auto-rows-min gap-4 md:grid-cols-4">
            <!-- Total Pemasukan  -->
            <Card>
              <CardHeader
                class="flex flex-row items-center justify-between space-y-0"
              >
                <CardTitle class="text-sm font-medium">
                  Total Pemasukan
                </CardTitle>
                <BanknoteArrowUp />
              </CardHeader>
              <CardContent>
                <div class="text-xl font-bold">Rp 45,231.89</div>
                <p class="text-xs text-muted-foreground">
                  +20.1% dari bulan sebelumnya
                </p>
              </CardContent>
            </Card>

            <!-- Sales -->
            <Card>
              <CardHeader
                class="flex flex-row items-center justify-between space-y-0"
              >
                <CardTitle class="text-sm font-medium"> Penjualan </CardTitle>
                <ShoppingCart />
              </CardHeader>
              <CardContent>
                <div class="text-xl font-bold">4000</div>
                <p class="text-xs text-muted-foreground">
                  +39.1% dari bulan sebelumnya
                </p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader
                class="flex flex-row items-center justify-between space-y-0"
              >
                <CardTitle class="text-sm font-medium"> Customers </CardTitle>
                <Users />
              </CardHeader>
              <CardContent>
                <div class="text-xl font-bold">24</div>
                <p class="text-xs text-muted-foreground">
                  +20.1% dari bulan sebelumnya
                </p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader
                class="flex flex-row items-center justify-between space-y-0"
              >
                <CardTitle class="text-sm font-medium">
                  Total Pengeluaran
                </CardTitle>
                <BanknoteArrowDown />
              </CardHeader>
              <CardContent>
                <div class="text-xl font-bold">Rp 100,231.89</div>
                <p class="text-xs text-muted-foreground">
                  +100.1% dari bulan sebelumnya
                </p>
              </CardContent>
            </Card>
          </div>
          <!-- Charts and Recent Activity -->
          <div class="grid gap-4 md:grid-cols-3">
            <!-- Sales Overview Chart -->
            <Card class="md:col-span-2">
              <CardHeader>
                <CardTitle>Overview</CardTitle>
                <CardDescription>Grafik penjualan bulanan</CardDescription>
              </CardHeader>
              <CardContent>
                <div class="h-80">
                  <OverviewChart :data="chartData" />
                </div>
              </CardContent>
            </Card>

            <!-- Recent Sales -->
            <Card>
              <CardHeader>
                <CardTitle>Penjualan Terbaru</CardTitle>
                <CardDescription
                  >Anda mendapat 265 penjualan bulan ini.</CardDescription
                >
              </CardHeader>
              <CardContent>
                <div class="space-y-4">
                  <div class="flex items-center space-x-4">
                    <div
                      class="w-9 h-9 bg-green-100 rounded-full flex items-center justify-center"
                    >
                      <span class="text-sm font-medium text-green-700">OM</span>
                    </div>
                    <div class="flex-1 space-y-1">
                      <p class="text-sm font-medium">Olivia Martin</p>
                      <p class="text-xs text-muted-foreground">
                        olivia.martin@email.com
                      </p>
                    </div>
                    <div class="text-sm font-medium text-green-600">
                      +Rp1.999.000
                    </div>
                  </div>

                  <div class="flex items-center space-x-4">
                    <div
                      class="w-9 h-9 bg-blue-100 rounded-full flex items-center justify-center"
                    >
                      <span class="text-sm font-medium text-blue-700">JL</span>
                    </div>
                    <div class="flex-1 space-y-1">
                      <p class="text-sm font-medium">Jackson Lee</p>
                      <p class="text-xs text-muted-foreground">
                        jackson.lee@email.com
                      </p>
                    </div>
                    <div class="text-sm font-medium text-green-600">
                      +Rp39.000
                    </div>
                  </div>

                  <div class="flex items-center space-x-4">
                    <div
                      class="w-9 h-9 bg-purple-100 rounded-full flex items-center justify-center"
                    >
                      <span class="text-sm font-medium text-purple-700"
                        >IN</span
                      >
                    </div>
                    <div class="flex-1 space-y-1">
                      <p class="text-sm font-medium">Isabella Nguyen</p>
                      <p class="text-xs text-muted-foreground">
                        isabella.nguyen@email.com
                      </p>
                    </div>
                    <div class="text-sm font-medium text-green-600">
                      +Rp299.000
                    </div>
                  </div>

                  <div class="flex items-center space-x-4">
                    <div
                      class="w-9 h-9 bg-orange-100 rounded-full flex items-center justify-center"
                    >
                      <span class="text-sm font-medium text-orange-700"
                        >WK</span
                      >
                    </div>
                    <div class="flex-1 space-y-1">
                      <p class="text-sm font-medium">William Kim</p>
                      <p class="text-xs text-muted-foreground">
                        will@email.com
                      </p>
                    </div>
                    <div class="text-sm font-medium text-green-600">
                      +Rp99.000
                    </div>
                  </div>

                  <div class="flex items-center space-x-4">
                    <div
                      class="w-9 h-9 bg-red-100 rounded-full flex items-center justify-center"
                    >
                      <span class="text-sm font-medium text-red-700">SD</span>
                    </div>
                    <div class="flex-1 space-y-1">
                      <p class="text-sm font-medium">Sofia Davis</p>
                      <p class="text-xs text-muted-foreground">
                        sofia.davis@email.com
                      </p>
                    </div>
                    <div class="text-sm font-medium text-green-600">
                      +Rp39.000
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </TabsContent>

      <TabsContent value="analytics">
        <!-- Content Dashboard untuk Analytics -->
        <div class="flex flex-1 flex-col gap-4 p-4 pt-0">
          <Card>
            <CardHeader>
              <CardTitle>Analytics Dashboard</CardTitle>
              <CardDescription>
                View detailed analytics and metrics for your application
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div class="grid gap-4 md:grid-cols-2">
                <div
                  class="aspect-video rounded-xl bg-muted/50 flex items-center justify-center"
                >
                  <span class="text-muted-foreground">Analytics Chart 1</span>
                </div>
                <div
                  class="aspect-video rounded-xl bg-muted/50 flex items-center justify-center"
                >
                  <span class="text-muted-foreground">Analytics Chart 2</span>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </TabsContent>

      <TabsContent value="queue">
        <!-- Content Dashboard untuk Queue -->
        <div class="flex flex-1 flex-col gap-4 p-4 pt-0">
          <Card>
            <CardHeader>
              <CardTitle>Queue Management</CardTitle>
              <CardDescription>
                Monitor and manage your application queue
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div class="space-y-4">
                <div class="rounded-xl bg-muted/50 p-4">
                  <div class="flex items-center justify-between">
                    <span>Queue Item 1</span>
                    <span class="text-sm text-muted-foreground">Pending</span>
                  </div>
                </div>
                <div class="rounded-xl bg-muted/50 p-4">
                  <div class="flex items-center justify-between">
                    <span>Queue Item 2</span>
                    <span class="text-sm text-muted-foreground"
                      >Processing</span
                    >
                  </div>
                </div>
                <div class="rounded-xl bg-muted/50 p-4">
                  <div class="flex items-center justify-between">
                    <span>Queue Item 3</span>
                    <span class="text-sm text-muted-foreground">Completed</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </TabsContent>
    </Tabs>
  </div>
</template>


app.vue:
<template>
  <NuxtLayout>
    <NuxtPage />
  </NuxtLayout>
</template>




